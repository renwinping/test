#include <msgpack.hpp>
#include <vector>
#include <string>
#include <iostream>

struct host
{
    std::string ip;
    int port;
};


class my_class
{
public:
	MSGPACK_DEFINE(my_string, m_host);
    my_class(std::string str, host & hstr):my_string(str), m_host(hstr){}
private:
	std::string my_string;
    host m_host;
	//std::vector<int> vec_int;
	//std::vector<std::string> vec_string;
};

int main()
{
	//std::vector<my_class> my_class_vec;

    host mh;
    mh.ip = "192.168.10.24";
    mh.port = 7881;

    my_class test("hello world", mh);

	// add some data


	msgpack::sbuffer buffer;
	msgpack::pack(buffer, mh);

	msgpack::unpacked msg;
	msgpack::unpack(&msg, buffer.data(), buffer.size());

	msgpack::object obj = msg.get();
    std::cout << obj << std::endl;

    //std::vector<my_class> my_class_vec_r;
    //host tmp
	//obj.convert(&tmp);

	return 0;
}
