// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ws_ser.proto

#ifndef PROTOBUF_ws_5fser_2eproto__INCLUDED
#define PROTOBUF_ws_5fser_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ws_5fser_2eproto();
void protobuf_AssignDesc_ws_5fser_2eproto();
void protobuf_ShutdownFile_ws_5fser_2eproto();

class WsConf;

// ===================================================================

class WsConf : public ::google::protobuf::Message {
 public:
  WsConf();
  virtual ~WsConf();

  WsConf(const WsConf& from);

  inline WsConf& operator=(const WsConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WsConf& default_instance();

  void Swap(WsConf* other);

  // implements Message ----------------------------------------------

  WsConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WsConf& from);
  void MergeFrom(const WsConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 webs_port = 1;
  inline bool has_webs_port() const;
  inline void clear_webs_port();
  static const int kWebsPortFieldNumber = 1;
  inline ::google::protobuf::uint32 webs_port() const;
  inline void set_webs_port(::google::protobuf::uint32 value);

  // required uint32 webs_thread_num = 2;
  inline bool has_webs_thread_num() const;
  inline void clear_webs_thread_num();
  static const int kWebsThreadNumFieldNumber = 2;
  inline ::google::protobuf::uint32 webs_thread_num() const;
  inline void set_webs_thread_num(::google::protobuf::uint32 value);

  // required uint32 http_port = 3;
  inline bool has_http_port() const;
  inline void clear_http_port();
  static const int kHttpPortFieldNumber = 3;
  inline ::google::protobuf::uint32 http_port() const;
  inline void set_http_port(::google::protobuf::uint32 value);

  // required uint32 http_thread_num = 4;
  inline bool has_http_thread_num() const;
  inline void clear_http_thread_num();
  static const int kHttpThreadNumFieldNumber = 4;
  inline ::google::protobuf::uint32 http_thread_num() const;
  inline void set_http_thread_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:WsConf)
 private:
  inline void set_has_webs_port();
  inline void clear_has_webs_port();
  inline void set_has_webs_thread_num();
  inline void clear_has_webs_thread_num();
  inline void set_has_http_port();
  inline void clear_has_http_port();
  inline void set_has_http_thread_num();
  inline void clear_has_http_thread_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 webs_port_;
  ::google::protobuf::uint32 webs_thread_num_;
  ::google::protobuf::uint32 http_port_;
  ::google::protobuf::uint32 http_thread_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ws_5fser_2eproto();
  friend void protobuf_AssignDesc_ws_5fser_2eproto();
  friend void protobuf_ShutdownFile_ws_5fser_2eproto();

  void InitAsDefaultInstance();
  static WsConf* default_instance_;
};
// ===================================================================


// ===================================================================

// WsConf

// required uint32 webs_port = 1;
inline bool WsConf::has_webs_port() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WsConf::set_has_webs_port() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WsConf::clear_has_webs_port() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WsConf::clear_webs_port() {
  webs_port_ = 0u;
  clear_has_webs_port();
}
inline ::google::protobuf::uint32 WsConf::webs_port() const {
  return webs_port_;
}
inline void WsConf::set_webs_port(::google::protobuf::uint32 value) {
  set_has_webs_port();
  webs_port_ = value;
}

// required uint32 webs_thread_num = 2;
inline bool WsConf::has_webs_thread_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WsConf::set_has_webs_thread_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WsConf::clear_has_webs_thread_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WsConf::clear_webs_thread_num() {
  webs_thread_num_ = 0u;
  clear_has_webs_thread_num();
}
inline ::google::protobuf::uint32 WsConf::webs_thread_num() const {
  return webs_thread_num_;
}
inline void WsConf::set_webs_thread_num(::google::protobuf::uint32 value) {
  set_has_webs_thread_num();
  webs_thread_num_ = value;
}

// required uint32 http_port = 3;
inline bool WsConf::has_http_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WsConf::set_has_http_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WsConf::clear_has_http_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WsConf::clear_http_port() {
  http_port_ = 0u;
  clear_has_http_port();
}
inline ::google::protobuf::uint32 WsConf::http_port() const {
  return http_port_;
}
inline void WsConf::set_http_port(::google::protobuf::uint32 value) {
  set_has_http_port();
  http_port_ = value;
}

// required uint32 http_thread_num = 4;
inline bool WsConf::has_http_thread_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WsConf::set_has_http_thread_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WsConf::clear_has_http_thread_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WsConf::clear_http_thread_num() {
  http_thread_num_ = 0u;
  clear_has_http_thread_num();
}
inline ::google::protobuf::uint32 WsConf::http_thread_num() const {
  return http_thread_num_;
}
inline void WsConf::set_http_thread_num(::google::protobuf::uint32 value) {
  set_has_http_thread_num();
  http_thread_num_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ws_5fser_2eproto__INCLUDED
